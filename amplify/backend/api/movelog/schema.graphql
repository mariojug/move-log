# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY {
  globalAuthRule: AuthRule = { allow: public }
} # FOR TESTING ONLY!
#
# =====================
#   ENUMS
# =====================

enum WorkoutType {
  WEIGHT
  CARDIO
}

enum WorkoutUnitType {
  LB
  KG
  MIN
  SEC
}

# =====================
#   MODELS
# =====================

type User
  @model
  @auth(rules: [{ allow: owner, operations: [read, create, delete, update] }]) {
  id: ID! @primaryKey
  username: String!
  workouts: [Workout] @hasMany
  routines: [Routine] @hasMany
}

type Routine
  @model
  @auth(
    rules: [
      { allow: owner, operations: [read, create, delete, update] }
      { allow: private, operations: [read, create, delete, update] }
    ]
  ) {
  id: ID! @primaryKey
  user: User! @belongsTo
  name: String!
  days: [Int]
  sections: [Section]! @hasMany
  workouts: [Workout] @manyToMany(relationName: "RoutineWorkout")
  notes: String
}

type Section
  @model
  @auth(
    rules: [
      { allow: owner, operations: [read, create, delete, update] }
      { allow: private, operations: [read, create, delete, update] }
    ]
  ) {
  id: ID! @primaryKey
  name: String!
  routine: Routine @belongsTo
  workouts: [Workout] @manyToMany(relationName: "SectionWorkout")
  notes: String
}

type Workout
  @model
  @auth(
    rules: [
      { allow: owner, operations: [read, create, delete, update] }
      { allow: private, operations: [read, create, delete, update] }
    ]
  ) {
  id: ID! @primaryKey
  name: String
  user: User! @belongsTo
  routines: [Routine]! @manyToMany(relationName: "RoutineWorkout")
  sections: [Section]! @manyToMany(relationName: "SectionWorkout")
  type: WorkoutType!
  logs: [Log] @hasMany
  notes: String
  units: WorkoutUnitType
  targetSetRange: [Int]
  targetRepRange: [Int]
  targetDurationRange: [Int]
}

type Log
  @model
  @auth(
    rules: [
      { allow: owner, operations: [read, create, delete, update] }
      { allow: private, operations: [read, create, delete, update] }
    ]
  ) {
  id: ID! @primaryKey
  name: String!
  timestamp: AWSTimestamp
  workout: Workout @belongsTo
  sets: [Set] @hasMany
  notes: String
  units: WorkoutUnitType
}

type Set
  @model
  @auth(
    rules: [
      { allow: owner, operations: [read, create, delete, update] }
      { allow: private, operations: [read, create, delete, update] }
    ]
  ) {
  id: ID! @primaryKey
  log: Log! @belongsTo
  weight: Int
  reps: Int
  duration: Int
  units: WorkoutUnitType
}
